[{"title":"计算机基础之操作系统(待完善)","url":"/2019/03/02/计算机基础之操作系统/","content":"\n# 操作系统\n\n## 概述\n\n操作系统是管理计算机软件与硬件资源的计算机程序。\n\n其目标为：方便性、有雄心、可扩充性、开放性\n\n作为软件接口，给用户提供三种方式：命令方式，系统调用方式，图形窗口方式。\n\n发展：\n\n- 无操作系统 1945年 用户独占 CPU等待人工操作\n\n- 单批道处理 50年代 投票及 自动性 顺序性 单道性\n\n- 多批道处理 60年代 多道性 无序性 调度性\n\n- 分时系统 60年代\n\n- 实时系统 60年代\n\n### 特性\n\n并发性：并发与并行的概念是不同的，并行性是指两个或多个事件在同一时刻发生，而并发性指两个或多个事件在同一时间间隔内发生。\n\n共享性： 两种资源共享方式，互斥共享与同时访问\n\n虚拟性：通过技术吧一个物理实体变成若干个逻辑上的对应物，如：虚拟处理机，虚拟内存，虚拟外部设备，虚拟信道等。通过分时实现\n\n异步性：进程以人们不可预知的速度向前推进\n\n## 进程管理\n\n### 进程概念\n\n进程：程序在并发执行环境中，资源分配和独立运行的基本单位。\n线程： 系统能够进行运算调度的最小单位，被包含在进程中。\n\n#### 并发执行特性：\n\n- 间断性\n- 失去封闭性\n- 不可再现性\n\n#### 进程特征：\n\n- 结构特征：PCB(Process Control Block),程序段与数据段\n- 动态性\n- 并发性\n- 异步性\n\n#### 进程与程序的关系：\n\n- 进程是一个动态概念，程序算是一个静态概念\n- 进程具有并行特征，程序没有\n- 进程是竞争资源的基本单位\n- 一个程序对应多个进程，一个进程为多个程序服务\n\n#### 进程的三个基本状态：\n\n- 就绪态\n- 执行态\n- 阻塞态\n\n#### 进程控制块(待完善)\n\n#### 进程控制\n\n进程管理中最基本的的功能是进程控制\n进程控制任务：进程的创建、终止、进程状态的转变等\n\n进程控制一般由OS内核来实现\n\n子进程可以基础父进程的资源\n\n### 进程状态图(待完善)\n\n- 挂起状态\n\n### 进程同步\n\n### 经典同步问题\n\n#### 生产者-消费者\n\n#### 哲学家就餐\n\n#### 读者-写者问题\n\n### 进程通信\n\n进程间的信息交换\n\n低级通信：进程的互斥和同步\n\n## 处理机调度与死锁\n\n### 调度层次\n\n一个批处理作业从进入系统并驻留在外村的后被队列开始，直至作业运行完毕，可能要经历的三级调度：\n\n- 高级调度，又称作业调度，长程调度，接纳调度。作用是把外村上出狱后被队列的作业调入内存，并为它们创建进程，分配资源，排在就绪队列上，准备执行。分时，实时系统通常不要作业调度。\n\n- 低级调度，也称为进程调度、短程调度，作用是决定就绪队列中的那个进程应获得处理机，然后由分派程序把处理及分配给该进程的具体操作\n\n  - 非抢占方式，一旦处理机分配给某进程后，便让该进程一直执行，直至该进程完成或阻塞时，才在把处理机分配给其他进程。\n  在采用非抢占式方式时，可能引起进程调度的因素可归结为这样几个：1.正在执行的进程执行完毕，或因发生某事件而不能再继续执行，2.执行的进程因提出I/O请求而暂停执行，3.再进程通信和同步过程中执行了某种原语操作，如P操作、Block原语、Wakeup原语等。该调度方式有点事实现简单，系统开销小，适用于大多数批处理系统环境，但它难以满足紧急任务的要求————立即执行，因而可能造成那一预料的后果。显然哦求比较严格的实时系统中，不宜采用这种调度方式。\n\n  - 抢占方式暂停正在执行的进程，将处理机分派给另一进程，优先权原则，短作业优先原则，时间片轮转。\n\n  - 中级调度，又称中度调度，为提高内存利用率和系统吞吐量，使哪些暂时不能运行的进程不在占用宝贵的内存资源，而将它们调至外存上去等待，把此时的进程状态称为就绪驻外存状态或者挂起状态。当这些进程重又具备运行条件、且内存又稍有空闲时，由中级调度来决定把外村上那些又具备运行条件的就绪进程，重新调入内存，并修改其状态为就绪状态，挂在就绪队列上等待进程调度。又称对换\n\n### 调度模型与准则\n\n- 仅有进程调度的调度队列模型，通常把就绪进程组织成FIFO队列，每当创建新进程时排在就绪队列的末尾，按时间片轮转方式运行。进程再执行时，出现三种情况：\n\n  - 任务在时间片内完成，进程便在释放处理机后进入完成状态。\n\n  - 任务在时间片内未完成，OS便将该人物再放在就绪队列末尾\n\n  - 在执行期间，进程因为某事而被阻塞后，将放入阻塞队列。\n\n- 具有高级和低级调度的调度队列模型\n与前一模型的差别：\n\n  - 就绪队列的形式。批处理系统中最常用的就是优先权队列。也可采用无序链表方式。\n\n  - 设置多个阻塞队列。\n\n- 同时具有三级调度的调度队列模型\n\n  调出时，可使进程状态由内存就绪变为外存就绪，由内存阻塞转变为外存阻塞，在中级调度使外存就绪变为内存就绪。\n\n### 调度算法\n\n#### 选择调度算法的方式与准则\n\n- 面向用户准则\n\n  - 周转时间短\n\n  - 响应时间块\n\n  - 截止时间的保证\n\n  - 优先权准则\n\n- 面向系统的准则\n\n  - 系统吞吐量高\n\n  - 处理机功率好\n\n  - 各类资源的平衡利用\n\n周转时间：从作业被提交给系统开始，到作业完成位置的这段时间间隔称作作业周转时间。包括四部分时间：\n\n- 在外存后备队列上等待调度的时间\n\n- 进程在就绪队列上等待调度的时间\n\n- 进程在CPU上执行的时间\n\n- 进程等待IO完成的时间\n\n平均周转时间：\n\n带权周转时间：\n\n\n\n\n### 死锁的原因与必要条件\n\n### 预防死锁的方法\n\n### 死锁的检测与解除\n\n## 存储器管理\n\n### 存储器结构层次\n\n### 程序装入与连接\n\n### 连续分配方式\n\n### 基本分页存储管理方式\n\n### 基本分段存储管理方式\n\n### 虚拟存储器概念\n\n### 请求分页存储管理方式\n\n### 页面置换算法\n\n## 设备管理\n\n### I/O系统\n\n### I/O控制方式\n\n### Linux中的5种IO模型\n\n### 缓冲管理\n\n### 设备分配\n\n### 磁盘存储器管理\n\n## 文件管理\n\n### 文件与文件系统\n\n### 文件的逻辑结构\n\n### 外存分配方式\n\n### 目录管理\n\n### 文件存储空间管理\n\n### 文件共享与保护","tags":["基础"],"categories":["计算机基础"]},{"title":"计算机基础之计算机网络(待完善)","url":"/2019/03/01/计算机基础之计算机网络/","content":"\n## 体系结构\n\n### TCP/IP四层\n\n- 应用层\n- 传输层\n- 网际层\n- 网络接口层\n\n### TCP/IP五层\n\n- 应用层\n- 传输层\n- 网络层\n- 数据链路层\n- 物理层\n\n### OSI七层\n\n- 应用层\n- 表现层\n- 会话层\n- 传输层\n- 网络层\n- 数据链路层\n- 物理层\n\n## 应用层\n\n### HTTP协议\n\n超文本传输协议(Hyper Text Transfer Protocol),是一种建立在TCP桑的无状态连接。HTTP用于客户端与服务器之间的通信，规定了客户端和服务器之间的通信格式。\n\n#### 报文格式\n\n一个HTTP的请求必定是由客户端发起，服务器端回复响应。服务器在没接收到请求之前是不会发送响应的\n\n##### 请求报文\n\n由请求行+请求头+空行+请求正文组成\n\n请求行格式为：方法+路径+HTTP版本\n\n请求头包含许多键值对\n\n```\n\n\n```\n\n##### 响应报文\n\n#### 状态码\n\n### HTTPS\n\n### DNS\n\n### P2P\n\n## 传输层\n\n### TCP\n\n#### TCP报文格式\n\n#### 三次握手\n\n#### 四次挥手\n\n#### 拥塞控制\n\n#### 滑动窗口机制\n\n#### 拆包与粘包\n\n### UDP\n\n## 网络层\n\n### IP\n\n#### IPV4与IPV6\n\n#### IP分类\n\n#### IP子网划分\n\n### ICMP\n\n### 路由\n\n#### 路由协议\n\n##### RIP\n\n##### OSPF\n\n##### BGP\n\n#### 路由算法\n\n##### LS\n\n##### DV\n\n## 数据链路层\n\n### PPP协议\n\n### 以太网\n","tags":["基础"],"categories":["计算机基础"]},{"title":"Java工程师面试之Java基础","url":"/2019/02/27/Java工程师面试之Java基础/","content":"\n### Java基础语法\n\n1. 简述Java8种基础类型的大小和他们的封装类，以及他们的初始化默认值。\n2. int和Integer的区别是什么，基础类型和包装类型的区别是什么\n3. char型变量能否存储一个中文汉字\n4. 怎样把byte转为String\n5. 如何把数值型字符转为数字\n6. 能否将int强制转换为byte类型变量？如果该值大于byte类型的范围会怎样\n7. 能否在不强制转换的情况下将一个都变了值赋值给long类型\n8. 类型的向下转型是什么\n9. 如何判断数组是null还是为空\n10. 如何判断数组是否有序\n11. 数组的length与 string的length()\n12. Object类种有哪些方法\n13. final，finalize，finally区别\n14. &操作符和&&操作符有什么区别?\n15. a = a + b 与 a += b 的区别？\n16. 3*0.1 == 0.3 将会返回什么？true 还是 false？\n17. loat f=3.4; 是否正确？\n18. short s1 = 1; s1 = s1 + 1;有什么错?\n19. switch 语句中的表达式可以是什么类型数据\n20. while 循环和 do 循环有什么不同\n21. static class 与 non static class的区别\n22. static 关键字是什么意思？Java中是否可以覆盖(override)一个private或者是static的方法\n23. 静态类型有什么特点\n24. main() 方法为什么必须是静态的？能不能声明 main() 方法为非静态\n25. 是否可以从一个静态（static）方法内部发出对非静态（non-static）方法的调用\n26. 静态变量在什么时候加载？编译期还是运行期？静态代码块加载的时机呢\n27. 成员方法是否可以访问静态变量？为什么静态方法不能访问成员变量\n28. volatile 修饰符有过什么实践\n29. volatile 变量是什么？volatile 变量和 atomic 变量有什么不同\n30. volatile 类型变量提供什么保证？能使得一个非原子操作变成原子操作吗\n31. 能创建 volatile 数组吗？\n32. transient变量有什么特点\n33. super什么时候使用\n34. public static void 写成 static public void会怎样\n35. 说明一下public static void main(String args[])这段声明里每个关键字的作用\n36. 请说出作用域public, private, protected, 以及不写时的区别\n37. sizeof 是Java 的关键字吗\n38. 能否在运行时向 static final 类型的赋值\n39. inal 与 static 关键字可以用于哪里？它们的作用是什么\n\n### Java面向对象\n1. 面向对象的特征是什么\n2. 重载与重写的区别\n3. 抽象类和接口的区别\n4. UML类图\n5. 静态块与构造块与构造函数执行顺序\n6. 内部类有几种，可否包含外部类成员，为什么要引入内部类\n7. 枚举可以继承，实现接口么\n8. 如何实现对象的克隆\n9. 深考被和浅拷贝的区别\n10. 写clone方法通常都有的一行方法是什么\n11. 深拷贝与浅拷贝如何实现激活机制\n12. Comparator与Compatatable的作用和区别\n13. 在比较对象时==与equals的区别\n14. 重写一个对象的equals运算有何区别\n15. 两个对象值相同(x.equals(y) == true)，但却可有不同的hash code，这句话对不对\n16. 什么时不可变对象\n17. 如何构建不可变的类结构\n18. 能否创建一个包含可变对象的不可变对象\n19. 如何对对象进行排序\n20. 构造器是否可以被重写\n21. 方法能否既是static又是synchronizeed\n22. abstact的method是否课同时是static，是否同时是native，是否可同时是synchronized\n23. 当对象作为参数传递到一个方法后，值传递还是引用传递\n24. 能否重载main方法\n25. main方法被声明为private会怎么样\n26. 当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递\n27. 接口是什么\n28. 为什么用接口，接口的优点\n29. 匿名内部类是否可以继承其它类？是否可以实现接口\n30. 抽象类中是否可以有main方法\n31. 抽象类中是否可以实现接口\n32. 抽象类是否可以继承具体类\n\n### Java常见工具类\n1. String有哪些函数\n2. StingBuffer，StringBuilder，String的区别\n4. Java常用的包有哪些\n5. Calendar Class的用途\n6. 如何在Java中获取日历类的实例\n7. 日历类中的常用方法\n8. 如何格式化日期对象\n10. locale类是什么\n11. Math.round()什么作用？Math.round(11.5) 等于多少？Math.round(-11.5)等于多少？\n12. XML文档定义有几种形式？它们之间有何本质区别？解析XML文档有哪几种方式？DOM 和 SAX 解析器有什么不同？\n13. 用 jdom 解析 xml 文件时如何解决中文问题？如何解析\n\n### Java异常处理\n1. 异常体系结构\n2. 举出5个RuntimeException\n3. 自定义异常\n4. try-catch-finally中的return\n6. throw与throws的区别\n\n### Java集合框架\n\nArrayList\nLinkedList\nVector\nHashMap\nLinkedHashMap\nTreeMap\nHashSet\nLinkedHashSet\nTreeSet\n\n\n### Java反射\n1. 反射的用途及其实现\n2. 反射机制的优缺点\n3. 如何通过反射获得对象的私有字段值\n4. 如何通过反射调用对象的方法\n5. 反射创建类实例的三种方式\n### Java注解\n1. 自定义注解的场景及其实现\n\n### 泛型\n1. 泛型解决哪些问题\n2. 泛型的特点\n\n### 序列化\n1. 什么是序列化\n2. Serializable与Externalizable的区别\n3. transient关键字\n\n### IO\n1. Java中有几种类型的流\n2. JDK为每种类型的流提供了一些抽象类以供继承，分别是哪些类\n","tags":["基础"],"categories":["Java"]}]